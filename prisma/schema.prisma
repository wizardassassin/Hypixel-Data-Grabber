generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BazaarItemLog {
  logId    String           @id @default(uuid())
  logRange AggregationRange

  productId      String
  lastUpdated    DateTime
  sellPriceTop   Float
  buyPriceTop    Float
  sellPrice      Float
  buyPrice       Float
  sellMovingWeek Float
  buyMovingWeek  Float
  sellVolume     Float
  buyVolume      Float
  sellOrders     Float
  buyOrders      Float

  @@unique([productId, lastUpdated, logRange])
}

model BinAuctionsItemLog {
  logId    String           @id @default(uuid())
  logRange AggregationRange

  itemId       String
  lastUpdated  DateTime
  lowestBin    Float
  lowestBinAvg Float
  count        Float

  @@unique([itemId, lastUpdated, logRange])
}

model Game {
  logId      String           @id @default(uuid())
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  gameId     String           @unique
  gameName   String
  isGamemode Boolean
  recent     PlayerCountLog?  @relation("RecentArchive")
  counts     PlayerCountLog[] @relation("CountArchive")

  gamemodes Game[]  @relation("Gamemodes")
  Game      Game?   @relation("Gamemodes", fields: [GameLogId], references: [logId])
  GameLogId String?
}

model PlayerCountLog {
  logId    String           @id @default(uuid())
  logRange AggregationRange

  gameId      String
  lastUpdated DateTime
  playerCount Float

  ArchiveGame      Game?   @relation("CountArchive", fields: [ArchiveGameLogId], references: [gameId])
  ArchiveGameLogId String?

  RecentGame      Game?   @relation("RecentArchive", fields: [RecentGameLogId], references: [gameId])
  RecentGameLogId String? @unique

  @@unique([gameId, lastUpdated])
}

enum AggregationRange {
  oneMinute
  fiveMinutes
  oneHour
  oneDay
  oneWeek
}
